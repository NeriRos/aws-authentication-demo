AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: serverless authentication app demo

Parameters:
  ClientDomain:
    Type: String
    Description: Domain allowed to use this UserPool
    Default: "https://2zqblfwse0.execute-api.eu-central-1.amazonaws.com"
  Postman:
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"

Conditions:
  UsePostman: !Equals [ !Ref Postman, "true" ]

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      Policies:
        PasswordPolicy:
          MinimumLength: 6

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      SupportedIdentityProviders:
        - COGNITO
      CallbackURLs:
        - !Ref ClientDomain
        - !If [ UsePostman, https://oauth.pstmn.io/v1/callback, !Ref AWS::NoValue ]
      LogoutURLs:
        - !Ref ClientDomain
        - !If [ UsePostman, https://oauth.pstmn.io/v1/callback, !Ref AWS::NoValue ]
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - code
        - !If [ UsePostman, implicit, !Ref AWS::NoValue ] # Implicit is only used for testing with postman and should not be in production.
      AllowedOAuthScopes:
        - email
        - openid
        - profile

  getUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-user.getUserHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Get users by id from a DynamoDB table (requires auth).
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Environment:
        Variables:
          USERS_TABLE: !Ref UsersTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /user/{id+}
            Method: GET

  createUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/create-user.createUserHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Description: Create user in the DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Environment:
        Variables:
          CLIENT_POOL_ID: !Ref UserPoolClient
          USER_POOL_ID: !Ref UserPool
          USERS_TABLE: !Ref UsersTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /user
            Method: POST

  UsersTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: national_id
        Type: String
      TableName: "Users"

  AppApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Description: Connect Cognito to HTTP API
      CorsConfiguration:
        AllowMethods:
          - GET
      Auth:
        Authorizers:
          JWTCognito:
            AuthorizationScopes:
              - Phone
            IdentitySource: "$request.header.Authorization"
            JwtConfiguration:
              issuer: !Sub "https://cognito-idp.${AWS::Region}.amazonaws.com/${UserPool}"
              audience:
                - !Ref UserPoolClient
        DefaultAuthorizer: JWTCognito

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage."
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
