AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: serverless authentication app demo

Parameters:
  Client:
    Description: Client website for authentication redirects and cors (must start with https://)
    Type: String
    Default: https://localhost:3000
  TestWithPostman:
    Description: Do you need to test with Postman? (Not recommended for production)
    Type: String
    Default: "false"
    AllowedValues:
      - "true"
      - "false"

Resources:
  AuthStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./auth.yaml
      Parameters:
        ClientDomain: !Ref Client
        Postman: !Ref TestWithPostman

  getUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-user.getUserHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Get users by id from a DynamoDB table (requires auth).
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Environment:
        Variables:
          USERS_TABLE: !Ref UsersTable
      Events:
        Api:
          Type: Api
          Properties:
            ApiId: !Ref AppApi
            Path: /user/{id}
            Method: GET

  createUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/create-user.createUserHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Create user in the DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Environment:
        Variables:
          USERS_TABLE: !Ref UsersTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /user
            Method: POST

  UsersTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String

  # Creates an API Gateway HTTP API endpoint with JWT authorization
  AppApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Description: Connect Cognito to HTTP API
      CorsConfiguration:
        AllowMethods:
          - GET
        AllowOrigins:
          - !Ref Client
      Auth:
        Authorizers:
          JWTAuthorizer:
            AuthorizationScopes:
              - email
            IdentitySource: "$request.header.Authorization"
            JwtConfiguration:
              issuer: !GetAtt AuthStack.Outputs.Issuer
              audience:
                - !GetAtt AuthStack.Outputs.UserPoolClientId
        DefaultAuthorizer: JWTAuthorizer

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
